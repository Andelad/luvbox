{"ast":null,"code":"var _jsxFileName = \"/workspaces/luvbox/src/components/cube/TopFace.tsx\";\nimport React from 'react';\nimport './CubeFaces.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopFace = () => {\n  // Sample love language data for the radar chart\n  const categories = [{\n    name: 'Words of Affirmation',\n    value: 0.8\n  }, {\n    name: 'Quality Time',\n    value: 0.9\n  }, {\n    name: 'Receiving Gifts',\n    value: 0.6\n  }, {\n    name: 'Acts of Service',\n    value: 0.7\n  }, {\n    name: 'Physical Touch',\n    value: 0.85\n  }];\n\n  // Calculate points for the radar chart\n  const calculateRadarPoints = () => {\n    const centerX = 50;\n    const centerY = 50;\n    const radius = 40;\n    return categories.map((category, index) => {\n      const angle = Math.PI * 2 * index / categories.length - Math.PI / 2;\n      const x = centerX + radius * category.value * Math.cos(angle);\n      const y = centerY + radius * category.value * Math.sin(angle);\n      return {\n        x,\n        y\n      };\n    });\n  };\n  const radarPoints = calculateRadarPoints();\n  const radarPath = radarPoints.map((point, index) => (index === 0 ? 'M' : 'L') + `${point.x},${point.y}`).join(' ') + 'Z';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-face\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Love Languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 100\",\n        children: [[0.2, 0.4, 0.6, 0.8, 1].map(scale => /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"50\",\n          cy: \"50\",\n          r: 40 * scale,\n          fill: \"none\",\n          stroke: \"#eee\",\n          strokeWidth: \"0.5\"\n        }, scale, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)), categories.map((_, index) => {\n          const angle = Math.PI * 2 * index / categories.length - Math.PI / 2;\n          const x = 50 + 40 * Math.cos(angle);\n          const y = 50 + 40 * Math.sin(angle);\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"50\",\n            y1: \"50\",\n            x2: x,\n            y2: y,\n            stroke: \"#ddd\",\n            strokeWidth: \"0.5\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: radarPath,\n          fill: \"rgba(215, 150, 123, 0.5)\",\n          stroke: \"#d7967b\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), radarPoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: point.x,\n          cy: point.y,\n          r: \"2\",\n          fill: \"#a25a3c\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)), categories.map((category, index) => {\n          const angle = Math.PI * 2 * index / categories.length - Math.PI / 2;\n          const x = 50 + 48 * Math.cos(angle);\n          const y = 50 + 48 * Math.sin(angle);\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: y,\n            fontSize: \"4\",\n            textAnchor: \"middle\",\n            dominantBaseline: \"middle\",\n            fill: \"#555\",\n            children: category.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Understanding what speaks to your heart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = TopFace;\nexport default TopFace;\nvar _c;\n$RefreshReg$(_c, \"TopFace\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TopFace","categories","name","value","calculateRadarPoints","centerX","centerY","radius","map","category","index","angle","Math","PI","length","x","cos","y","sin","radarPoints","radarPath","point","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","scale","cx","cy","r","fill","stroke","strokeWidth","_","x1","y1","x2","y2","d","fontSize","textAnchor","dominantBaseline","_c","$RefreshReg$"],"sources":["/workspaces/luvbox/src/components/cube/TopFace.tsx"],"sourcesContent":["import React from 'react';\nimport './CubeFaces.css';\n\nconst TopFace: React.FC = () => {\n  // Sample love language data for the radar chart\n  const categories = [\n    { name: 'Words of Affirmation', value: 0.8 },\n    { name: 'Quality Time', value: 0.9 },\n    { name: 'Receiving Gifts', value: 0.6 },\n    { name: 'Acts of Service', value: 0.7 },\n    { name: 'Physical Touch', value: 0.85 }\n  ];\n  \n  // Calculate points for the radar chart\n  const calculateRadarPoints = () => {\n    const centerX = 50;\n    const centerY = 50;\n    const radius = 40;\n    \n    return categories.map((category, index) => {\n      const angle = (Math.PI * 2 * index) / categories.length - Math.PI / 2;\n      const x = centerX + radius * category.value * Math.cos(angle);\n      const y = centerY + radius * category.value * Math.sin(angle);\n      return { x, y };\n    });\n  };\n  \n  const radarPoints = calculateRadarPoints();\n  const radarPath = radarPoints.map((point, index) => \n    (index === 0 ? 'M' : 'L') + `${point.x},${point.y}`\n  ).join(' ') + 'Z';\n  \n  return (\n    <div className=\"top-face\">\n      <h2>Love Languages</h2>\n      <div className=\"radar-container\">\n        <svg viewBox=\"0 0 100 100\">\n          {/* Background circles */}\n          {[0.2, 0.4, 0.6, 0.8, 1].map(scale => (\n            <circle \n              key={scale}\n              cx=\"50\" \n              cy=\"50\" \n              r={40 * scale} \n              fill=\"none\" \n              stroke=\"#eee\" \n              strokeWidth=\"0.5\"\n            />\n          ))}\n          \n          {/* Category lines */}\n          {categories.map((_, index) => {\n            const angle = (Math.PI * 2 * index) / categories.length - Math.PI / 2;\n            const x = 50 + 40 * Math.cos(angle);\n            const y = 50 + 40 * Math.sin(angle);\n            return (\n              <line \n                key={index}\n                x1=\"50\" \n                y1=\"50\" \n                x2={x} \n                y2={y} \n                stroke=\"#ddd\" \n                strokeWidth=\"0.5\"\n              />\n            );\n          })}\n          \n          {/* Radar area */}\n          <path \n            d={radarPath} \n            fill=\"rgba(215, 150, 123, 0.5)\" \n            stroke=\"#d7967b\" \n            strokeWidth=\"2\"\n          />\n          \n          {/* Data points */}\n          {radarPoints.map((point, index) => (\n            <circle\n              key={index}\n              cx={point.x}\n              cy={point.y}\n              r=\"2\"\n              fill=\"#a25a3c\"\n            />\n          ))}\n          \n          {/* Category labels */}\n          {categories.map((category, index) => {\n            const angle = (Math.PI * 2 * index) / categories.length - Math.PI / 2;\n            const x = 50 + 48 * Math.cos(angle);\n            const y = 50 + 48 * Math.sin(angle);\n            return (\n              <text\n                key={index}\n                x={x}\n                y={y}\n                fontSize=\"4\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"middle\"\n                fill=\"#555\"\n              >\n                {category.name}\n              </text>\n            );\n          })}\n        </svg>\n      </div>\n      <p>Understanding what speaks to your heart</p>\n    </div>\n  );\n};\n\nexport default TopFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
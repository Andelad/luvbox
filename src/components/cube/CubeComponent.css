/* CSS Variables for colors and common values */
:root {
  --color-primary: #d7967b;
  --color-primary-dark: #c27b5d;
  --color-primary-darker: #a25a3c;
  --color-text: #2d2d2d;
  --color-text-light: #666;
  --color-background: #f0e9e2;
  --color-border: #ddd;
  --cube-border-radius: 6px;
  --input-height: 48px;
}

/* Layout containers */
.cube-wrapper {
  min-height: calc(100vh - 60px);
  display: flex;
  flex-direction: column;
  background-color: var(--color-background);
  overflow: visible; /* Changed from overflow-y: auto to prevent double scrollbars */
}

/* Updated cube layout styling */
.cube-layout {
  display: flex;
  width: 100%;
  position: relative;
  justify-content: center;
  min-height: 800px; /* Add minimum height to ensure content fits */
}

.cube-title-column {
  position: absolute;
  left: calc(50% - 500px); /* Moved further to the left to avoid overlap with scores */
  top: 50px; /* Align with the top of the cube */
  width: 200px;
  text-align: left;
  z-index: 1;
}

.cube-content {
  width: 700px; /* Fixed width to keep the cube square */
  margin: 0 auto;
}

.cube-title {
  font-size: 2.5rem;
  margin: 0 0 1rem 0;
  color: var(--color-primary-darker);
  text-align: left;
}

.cube-subtitle {
  font-size: 0.9rem;
  line-height: 1.4;
  margin: 0;
  color: var(--color-text-light);
  text-align: left;
}

.cube-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start; /* Changed from center to improve spacing */
  padding: var(--spacing-md);
  position: relative;
  min-height: 400px;
  width: 100%;
  max-width: 700px; /* Ensure a maximum width */
}

/* Graph Plane and Scene */
.graph-plane {
  position: relative;
  width: 600px; /* Fixed width */
  height: 600px; /* Fixed height to ensure it's square */
  margin: 0 auto;
  box-sizing: border-box;
  margin-bottom: 100px; /* Increased space for labels and category lines */
}

.scene {
  width: calc(100% - 100px);
  height: calc(100% - 100px);
  perspective: 1200px;
  position: absolute;
  top: 50px;
  left: 50px;
  transform-style: preserve-3d;
  background-color: rgba(var(--color-background-rgb), 0.2);
  border-radius: var(--radius-sm);
}

/* 3D Cube styling */
.cube {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transform: translateZ(-230px) rotateX(0deg) rotateY(0deg);
  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.cube-face {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  background-color: rgba(var(--color-white-rgb), 0.95);
  border: 1px solid var(--color-border);
  backface-visibility: hidden;
  overflow: hidden;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1) inset;
  transition: opacity 0.5s ease;
  box-sizing: border-box;
}

/* Cube face positions */
.front  { transform: rotateY(0deg) translateZ(230px); }
.right  { transform: rotateY(90deg) translateZ(230px); }
.back   { transform: rotateY(180deg) translateZ(230px); }
.left   { transform: rotateY(-90deg) translateZ(230px); }
.top    { transform: rotateX(90deg) translateZ(230px); }
.bottom { transform: rotateX(-90deg) translateZ(230px); }

.cube-face.inactive {
  opacity: 0;
  pointer-events: none;
}

.placeholder-face {
  color: var(--color-text-light);
  text-align: center;
  font-style: italic;
}

/* Cube Navigation Icons */
.cube-icons-navigation {
  display: flex;
  width: calc(100% - 100px);
  max-width: 460px;
  margin: 0 auto 1.5rem;
  justify-content: space-between;
}

.cube-icon-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s ease;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-sm);
  width: 32%;
}

.cube-icon-content {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.cube-icon-label {
  margin-left: 0.7rem;
  font-size: var(--font-size-sm);
  font-weight: 600;
  color: var(--color-text);
  white-space: nowrap;
}

/* Hover and active states */
.cube-icon-wrapper:hover {
  background-color: rgba(var(--color-primary-rgb), 0.1);
}

.cube-icon-wrapper.active {
  background-color: rgba(var(--color-primary-rgb), 0.2);
}

.cube-icon-wrapper.active .cube-icon-label {
  color: var(--color-primary-darker);
}

/* Axis styling */
.y-axis {
  position: absolute;
  left: 0;
  /* Position relative to scene, not graph-plane */
  top: 50px;
  bottom: 50px;
  width: 50px;
  height: calc(100% - 100px); /* Match the scene height exactly */
  color: var(--color-text-light);
  transition: opacity 1s ease;
  opacity: 1;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0;
}

.axis-title {
  position: absolute;
  font-size: 1em; /* Increased from 0.9rem to 1em */
  font-weight: 600;
  color: var(--color-text-light);
  transition: opacity 1s ease;
  left: -18px;
  top: 50%;
  transform: rotate(-90deg) translateX(50%);
  transform-origin: left center;
  text-align: center;
}

.axis-labels {
  position: absolute;
  font-size: 1em; /* Increased from 0.8rem to 1em */
  transition: opacity 1s ease;
  right: 5px;
  top: 0;
  height: 100%;
  width: 30px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  /* Use padding to fine-tune alignment with cube face */
  padding: 6px 0;
  box-sizing: border-box;
}

.axis-label {
  position: relative;
  white-space: nowrap;
  font-size: 1em; /* Increased from 0.75rem to 1em */
  text-align: right;
  padding-right: 10px;
  /* Remove absolute positioning to use flex layout */
}

/* Transitioning states */
.y-axis.transitioning,
.axis-title.transitioning,
.axis-labels.transitioning {
  opacity: 0;
}

/* X-axis labels */
.label-row {
  display: flex;
  width: calc(100% - 100px); /* Match scene width */
  position: absolute;
  bottom: 20px; /* Position closer to the cube face */
  left: 50px; /* Match scene left offset */
  z-index: 2;
  transition: opacity 0.5s ease;
  padding: 0 15px; /* Add padding to constrain the labels within the face width */
  box-sizing: border-box;
}

/* Make sure labels are visible for all faces */
.label-row.transitioning {
  opacity: 0;
}

.label-column {
  display: flex;
  justify-content: center;
  position: relative;
  flex: 1;
  /* Remove any margins that might cause overflow */
  margin: 0;
  padding: 0;
}

/* First and last labels special alignment */
.label-column:first-child {
  justify-content: center; /* Center the first label rather than align left */
}

.label-column:last-child {
  justify-content: center; /* Center the last label rather than align right */
}

.axis-label-text {
  font-family: 'EB Garamond', serif;
  font-weight: 600;
  font-style: italic;
  font-size: 1.1rem;
  color: var(--color-text);
  text-align: center;
  background-color: rgba(var(--color-background-rgb), 0.7);
  padding: 0 5px;
  border-radius: var(--radius-sm);
}

/* Category sections */
.category-lines {
  display: flex;
  width: calc(100% - 100px); /* Match scene width */
  position: absolute;
  bottom: -25px; /* Position below the x-axis labels */
  left: 50px; /* Match scene left offset */
  z-index: 2;
  transition: opacity 0.5s ease;
}

.category-lines.transitioning {
  opacity: 0;
}

/* Reset the flex layout for precise positioning */
.category-section {
  position: absolute;
  height: 30px;
}

/* First bracket: from 0/6ths (left edge) to 2/6ths */
.category-section.chemistry { 
  left: 0; /* Start from the left edge (0/6ths) */
  width: calc(2 * (100% / 6)); /* Width of 2/6ths */
}

/* Second bracket: from 3/6ths to 5/6ths */
.category-section.compatibility { 
  left: calc(3 * (100% / 6)); /* Start at 3/6ths */
  width: calc(2 * (100% / 6)); /* Width of 2/6ths */
}

/* Third bracket: just the right edge at 6/6ths */
.category-section.viability { 
  left: calc(100% - 10px); /* Aligned with the right edge */
  width: 10px; /* Minimal width */
}

/* Adjust category label positions to be centered under their brackets */
.category-section .category-label {
  position: relative;
  left: 0;
  width: 100%;
  text-align: center;
}

/* Special case for viability label to be centered under the right edge (6/6th) */
.category-section.viability .category-label {
  position: absolute;
  width: 80px; /* Fixed width for the label */
  text-align: center;
  right: 5px; /* Align with the bracket line */
  transform: translateX(-50%); /* Center the label by moving it left by half its width */
}

.category-line {
  position: relative;
  height: 2px;
  background-color: var(--color-text);
  margin: 0.5rem 0;
  width: 100%;
}

/* Category section dividers */
.category-section .category-line::before,
.category-section .category-line::after {
  content: '';
  position: absolute;
  width: 2px;
  height: 8px; /* Adjust height as needed */
  background-color: var(--color-text);
  top: -8px; /* Position exactly above the horizontal line */
  transform: none; /* Remove transform to avoid positioning issues */
}

.category-section .category-line::before { left: 0; }
.category-section .category-line::after { right: 0; }

.category-label {
  font-family: var(--font-family-primary);
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--color-text);
  text-align: center;
  margin-top: 2px;
}

/* Interface controls */
.cube-interface {
  width: min(90%, 600px);
  margin: 20px auto 30px; /* Added bottom margin */
  padding: 0 0 2rem;
}

/* Value inputs row */
.value-row {
  display: flex;
  justify-content: space-between;
  width: calc(100% - 100px);
  margin: 0 auto 0 50px;
}

.value-column {
  flex: 1;
  display: flex;
  justify-content: center;
}

.value-input {
  width: 50px;
  height: var(--input-height);
  font-size: var(--font-size-md);
  padding: 4px;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  text-align: center;
  color: var(--color-text);
  background-color: var(--color-white);
  margin: 0 auto;
  font-weight: 400;
}

.value-input:focus {
  outline: none;
  border-color: var(--color-primary-darker);
  box-shadow: 0 0 0 2px rgba(var(--color-primary-darker-rgb), 0.1);
}

/* Snapshot controls */
.controls-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 2rem;
}

.name-input-container {
  display: flex;
  align-items: center;
}

.name-label {
  margin-right: 10px;
  font-size: 1.1rem;
  font-weight: 600;
  color: var(--color-text);
}

.name-input {
  padding: 10px 12px;
  height: var(--input-height);
  border: 1px solid var(--color-border);
  border-radius: 4px;
  font-size: 1rem;
  width: 200px;
  background-color: white;
  box-sizing: border-box;
}

.name-input:focus {
  outline: none;
  border-color: var(--color-primary-darker);
  box-shadow: 0 0 0 2px rgba(var(--color-primary-darker-rgb), 0.1);
}

.snapshot-button {
  background-color: var(--color-primary);
  color: white;
  border: none;
  border-radius: 4px;
  height: var(--input-height);
  padding: 0 20px;
  font-weight: 600;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.3s ease;
}

.snapshot-button:hover {
  background-color: var(--color-primary-dark);
}

/* Responsive styles */
@media (max-width: 1200px) {
  .cube-title-column {
    left: 50px; /* Increased spacing for medium screens */
  }
  
  .cube-content {
    margin-left: 250px; /* Add margin to prevent cube from overlapping with title */
    margin-right: auto;
  }
}

@media (max-width: 1024px) {
  .graph-plane {
    width: 90%;
  }
}

@media (max-width: 1000px) {
  .cube-layout {
    flex-direction: column;
    align-items: center;
    min-height: 900px; /* Ensure enough space for vertical layout */
  }
  
  .cube-title-column {
    position: relative;
    left: auto;
    top: auto;
    width: 90%;
    max-width: 600px;
    margin-bottom: 20px;
    padding: 1rem 0;
  }
  
  .cube-content {
    width: 100%;
    max-width: 700px;
    margin-left: auto; /* Reset the margin */
  }
  
  .graph-plane {
    width: 90%;
    height: auto;
    aspect-ratio: 1/1; /* Maintain square aspect ratio */
    max-width: 600px;
  }
}

@media (max-width: 768px) {
  .cube-wrapper {
    height: auto;
    min-height: 100vh;
  }
  
  .cube-container {
    min-height: 400px;
  }
  
  .cube-icons-navigation {
    gap: 0.5rem;
  }
  
  .cube-interface {
    width: 95%;
  }
  
  .label-row {
    bottom: 20px; /* Consistent with desktop */
  }
  
  .category-lines {
    bottom: -25px;
  }
  
  .axis-label-text {
    font-size: 0.8rem;
  }
  
  .category-label {
    font-size: 0.8rem;
  }
  
  .graph-plane {
    margin-bottom: 120px; /* Increased bottom margin on mobile */
  }
  
  /* Stack controls vertically on mobile */
  .controls-row {
    flex-direction: column;
    gap: 1rem;
  }
  
  .name-input-container,
  .name-input,
  .snapshot-button {
    width: 100%;
  }
  
  .cube-title {
    text-align: center;
  }
  
  .cube-subtitle {
    text-align: center;
  }
}